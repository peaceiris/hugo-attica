name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
  pull_request:
    paths-ignore:
      - "README.md"
  schedule:
    - cron: "13 13 * * *"

jobs:
  deploy:
    runs-on: ubuntu-18.04
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Read .env
        id: hugo_version
        run: |
          . ./.env
          echo "::set-output name=hugo_version::${HUGO_VERSION}"

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2.5.0
        with:
          hugo-version: "${{ steps.hugo_version.outputs.hugo_version }}"
          extended: true

      - uses: actions/cache@v2.1.6
        with:
          path: /tmp/hugo_cache
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-

      - run: make cibuild

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2.2
        with:
          publish-dir: './exampleSite/public'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: false
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

      - name: Build
        working-directory: ./exampleSite
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export BASE_URL="https://hugothemeiris.peaceiris.app"
          export GH_USER_ID="peaceiris"
          bash ./scripts/fetch_data.sh "${GH_USER_ID}" > "./data/github/${GH_USER_ID}.json"
          hugo --minify --cleanDestinationDir \
            --themesDir ../../ \
            --baseURL "${BASE_URL}" \
            --i18n-warnings --path-warnings
          wget -O ./public/report.html "${BASE_URL}/report.html" || true

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.8.0
        if: github.ref == 'refs/heads/main'
        with:
          #deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./exampleSite/public
          allow_empty_commit: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

  lighthouse:
    needs: deploy
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-18.04
    timeout-minutes: 2
    steps:
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: "14"

      - name: Install lighthouse
        run: sudo npm i -g lighthouse

      - name: Run lighthouse
        run: |
          lighthouse \
            --chrome-flags="--headless" \
            --output html --output-path ./report.html \
            'https://hugothemeiris.peaceiris.app'

      - name: Upload result
        uses: actions/upload-artifact@v2.2.3
        with:
          name: lighthouse-report
          path: report.html

      - name: Prepare assets
        run: |
          mkdir ./public
          cp ./report.html ./public/report.html

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./public
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

  test-docker:
    runs-on: ubuntu-18.04
    timeout-minutes: 2
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/cache@v2.1.6
        with:
          path: /tmp/hugo_cache
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-

      - name: Build Testing with Docker
        run: |
          export HUGO_CACHEDIR=/tmp/hugo_cache
          make build

  test-setup:
    runs-on: ubuntu-18.04
    timeout-minutes: 2
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    strategy:
      matrix:
        extended:
          - true
          - false
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Read .env
        id: hugo_version
        run: |
          . ./.env
          echo "::set-output name=hugo_version::${HUGO_VERSION}"

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2.5.0
        with:
          hugo-version: "${{ steps.hugo_version.outputs.hugo_version }}"
          extended: ${{ matrix.extended }}

      - uses: actions/cache@v2.1.6
        with:
          path: /tmp/hugo_cache
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugomod-

      - name: Setup Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create a new Hugo project
        run: |
          mkdir ~/homepage
          cp scripts/setup.sh ~
          cd ~
          bash ./setup.sh "homepage" "peaceiris"
          cd homepage
          hugo
